{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "servicenowRequest": {
      "type": "string"
    },
    "vaultSubscriptionID": {
      "type": "string"
    },
    "vaultName": {
      "type": "string"
    },
    "vaultResourceGroup": {
      "type": "string"
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VMs"
      }
    },
    "vmSizeNode": {
      "type": "string",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "vmSizeWitness": {
      "type": "string",
      "metadata": {
        "description": "Size of the VM"
      }
    },

    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "existingsubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to use"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "imagePublisher": {
      "type": "string",
      "metadata": {
        "description": "Image publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "metadata": {
        "description": "Image offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "imageVersion": {
      "type": "string",
      "metadata": {
        "description": "Image Version"
      }
    },
    "diskNum": {
      "type": "int",
      "metadata": {
        "description": "Number of Data Disks"
      }
    },
    "diskSize": {
      "type": "string",
      "defaultValue": "128",
      "allowedValues": [
        "128",
        "512",
        "1023"
      ],
      "metadata": {
        "description": "Disk Size"
      }
    },
    "storageType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Type"
      }
    },
    "diskCaching": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "ReadOnly",
        "ReadWrite"
      ],
      "metadata": {
        "description": "Disk Caching"
      }
    },
    "availabilitySetReq": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Availability Set Required"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "None",
      "metadata": {
        "description": "Availability Set Name"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
    "availabilitySetId": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
    },
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('existingsubnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "[providers('Microsoft.Compute', 'availabilitySets').apiVersions[0]]",
      "Condition": "[equals(parameters('availabilitySetReq'), 'yes')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "3",
        "platformUpdateDomainCount": "20"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('clusterName'), 'a-nic1')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('clusterName'),'a')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('clusterName'), 'a-nic1')]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(equals(parameters('availabilitySetReq'), 'yes'), variables('availabilitySetId'), json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeNode')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('clusterName'), 'a-nic1'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[concat(parameters('clusterName'),'a')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/', parameters('vaultSubscriptionID'), '/resourceGroups/', parameters('vaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName')) ]"
              },
              "secretName": "\"[concat(parameters('clusterName'),'a')]"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "[parameters('imageVersion')]"
            },
            "osDisk": {
              "name": "[concat(parameters('clusterName'), 'a-OSDisk')]",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "copy": [
              {
                "name": "DataDisks",
                "count": "[parameters('diskNum')]",
                "input": {
                  "caching": "None",
                  "diskSizeGB": "[parameters('diskSize')]",
                  "lun": "[copyIndex('DataDisks')]",
                  "name": "[concat(parameters('clusterName'), 'a-datadisk', copyIndex('DataDisks'))]",
                  "createOption": "Empty",
                  "managedDisk": {
                    "storageAccountType": "[parameters('storageType')]"
                  }
                }
              }
            ]
          }
        }
      }      
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('clusterName'), 'b-nic1')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('clusterName'),'b')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('clusterName'), 'b-nic1')]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(equals(parameters('availabilitySetReq'), 'yes'), variables('availabilitySetId'), json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeNode')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('clusterName'), 'b-nic1'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[concat(parameters('clusterName'),'b')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/', parameters('vaultSubscriptionID'), '/resourceGroups/', parameters('vaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName')) ]"
              },
              "secretName": "[concat(parameters('clusterName'),'b')]"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "[parameters('imageVersion')]"
            },
            "osDisk": {
              "name": "[concat(parameters('clusterName'), 'b-OSDisk')]",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "copy": [
              {
                "name": "DataDisks",
                "count": "[parameters('diskNum')]",
                "input": {
                  "caching": "None",
                  "diskSizeGB": "[parameters('diskSize')]",
                  "lun": "[copyIndex('DataDisks')]",
                  "name": "[concat(parameters('clusterName'), 'b-datadisk', copyIndex('DataDisks'))]",
                  "createOption": "Empty",
                  "managedDisk": {
                    "storageAccountType": "[parameters('storageType')]"
                  }
                }
              }
            ]
          }
        }
      }        
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('clusterName'), 'w-nic1')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('clusterName'),'w')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('clusterName'), 'w-nic1')]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(equals(parameters('availabilitySetReq'), 'yes'), variables('availabilitySetId'), json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeWitness')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('clusterName'), 'w-nic1'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[concat(parameters('clusterName'),'w')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/', parameters('vaultSubscriptionID'), '/resourceGroups/', parameters('vaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName')) ]"
              },
              "secretName": "[concat(parameters('clusterName'),'w')]"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "[parameters('imageVersion')]"
            },
            "osDisk": {
              "name": "[concat(parameters('clusterName'), 'w-OSDisk')]",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      }
    }          
  ]
}
